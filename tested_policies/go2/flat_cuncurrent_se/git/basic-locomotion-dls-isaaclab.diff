--- git status ---
On branch devel
Your branch is up to date with 'origin/devel'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   deploy/config.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/go2_env_cfg.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/locomotion_env.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	tested_policies/go2/flat/
	tested_policies/go2/go2_5asymm/
	tested_policies/go2/go2_flat_cuncurrent_se/

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/deploy/config.py b/deploy/config.py
index f2e7540..7a201cf 100644
--- a/deploy/config.py
+++ b/deploy/config.py
@@ -4,7 +4,7 @@ dir_path = os.path.dirname(os.path.realpath(__file__))
 sys.path.append(dir_path+"/../")
 sys.path.append(dir_path+"/../scripts/rsl_rl")
 
-robot = 'aliengo'  # 'aliengo', 'go1', 'go2', 'b2', 'hyqreal1', 'hyqreal2', 'mini_cheetah' 
+robot = 'go2'  # 'aliengo', 'go1', 'go2', 'b2', 'hyqreal1', 'hyqreal2', 'mini_cheetah' 
 scene = 'random_boxes'  # flat, random_boxes, random_pyramids, perlin
 
 # ----------------------------------------------------------------------------------------------------------------
@@ -38,7 +38,7 @@ else:
 
 # ----------------------------------------------------------------------------------------------------------------
 
-policy_folder_path = dir_path + "/../tested_policies/" + robot + "/aliengo_symmetricactor"
+policy_folder_path = dir_path + "/../tested_policies/" + robot + "/2025-10-11_10-48-08"
 #policy_folder_path = dir_path + "/../tested_policies/" + robot + "/go2_5asymm"
 
 cuncurrent_state_est_network = policy_folder_path + "/exported/cuncurrent_state_estimator.pth"
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/go2_env_cfg.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/go2_env_cfg.py
index 3d6bd4d..66be44c 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/go2_env_cfg.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/go2_env_cfg.py
@@ -166,7 +166,7 @@ class Go2FlatEnvCfg(DirectRLEnvCfg):
         cuncurrent_state_est_batch_size = 512
         cuncurrent_state_est_train_epochs = 1000
         cuncurrent_state_est_lr = 1e-3
-        cuncurrent_state_est_ep_saving_interval = 1000
+        cuncurrent_state_est_ep_saving_interval = 500
 
     use_rma = False
     if(use_rma):
@@ -283,7 +283,7 @@ class Go2FlatEnvCfg(DirectRLEnvCfg):
 
     # Desired tracking variables
     desired_base_height = 0.30
-    desired_feet_height = 0.03
+    desired_feet_height = 0.05
 
     # Desired clip actions
     desired_clip_actions = 3.0
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/locomotion_env.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/locomotion_env.py
index 1c82275..f2108a2 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/locomotion_env.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/locomotion_env.py
@@ -331,12 +331,25 @@ class LocomotionEnv(DirectRLEnv):
         delta_s = torch.tensor(distance_between_front_and_back).to(self.device)
         terrain_pitch = -torch.atan2(delta_z, delta_s)
         #terrain_pitch = torch.atan2(torch.sin(terrain_pitch), torch.cos(terrain_pitch))
+
+        """cols_right = torch.arange(0, height_data_scanner.shape[1]//2, 1).unsqueeze(1) 
+        cols_right = cols_right.flatten().to(height_data_scanner.device)
+        selected_height_data_right = height_data_scanner[:, cols_right]
+
+        cols_left = torch.arange(0, height_data_scanner.shape[1]//2, 1).unsqueeze(1) + height_data_scanner.shape[1]//2
+        cols_left = cols_left.flatten().to(height_data_scanner.device)
+        selected_height_data_left = height_data_scanner[:, cols_left]
+
+        delta_z_roll = torch.mean(selected_height_data_right, dim=1) - torch.mean(selected_height_data_left, dim=1)
+        delta_s_roll = torch.tensor((height_map_y_points-1)* height_map_resolution).to(self.device)
+        terrain_roll = -torch.atan2(delta_z_roll, delta_s_roll)"""
+        
         
         root_roll_w, root_pitch_w, _ = math_utils.euler_xyz_from_quat(self._robot.data.root_quat_w)
         root_roll_w = torch.atan2(torch.sin(root_roll_w), torch.cos(root_roll_w))
         root_pitch_w = torch.atan2(torch.sin(root_pitch_w), torch.cos(root_pitch_w))
         
-        base_orientation =  torch.square(terrain_pitch - root_pitch_w)# + torch.square(0 - root_roll_w)
+        base_orientation =  torch.square(terrain_pitch - root_pitch_w)# + torch.square(terrain_roll - root_roll_w)
 
 
         # angular velocity x/y tracking